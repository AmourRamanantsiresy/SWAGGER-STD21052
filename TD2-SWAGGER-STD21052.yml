openapi: 3.0.1
info:
  title: STD21052-TD2
  description: TD2
  version: 1.0.0
servers:
  - url: http://STD21052.com

tags:
  - name: Calendar
  - name: Room
  - name: Film
  - name: Projection
  - name: Category
paths:
  /calendars:
    get:
      tags:
        - "Calendar"
      summary: get the film screening schedule
      description: get the calendar of the week of the indicated date
      operationId: getCalendar
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  monday:
                    $ref: "#/components/schemas/Projection_per_day"
                  tuesday:
                    $ref: "#/components/schemas/Projection_per_day"

  /rooms:
    get:
      tags:
        - "Room"
      summary: Get all Rooms
      operationId: getRooms
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Room"

        400:
          description: Error
          content: {}
  /rooms/{id}:
    get:
      tags:
        - "Room"
      summary: get the room by its identifier
      operationId: getRoom
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Room"
    patch:
      tags:
        - "Room"
      summary: change the room capacity
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
            examples:
              changeCapacity:
                value:
                  capacity: 91
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Room"
  /films:
    get:
      tags:
        - "Film"
      summary: Get all Films
      operationId: getFilms
      parameters:
        - name: filmCount
          description: how many films do you want?
          in: query
          schema:
            type: integer
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Film"
        400:
          description: Error
          content: {}
    post:
      tags:
        - "Film"
      summary: creates a new film
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      requestBody:
        description: new film
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewFilm"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Film"
        400:
          description: Error
          content: {}
    ## delete many Films
    delete:
      tags:
        - "Film"
      summary: deletes many films by their film_id
      requestBody:
        description: List of film_id you wish to delete
        content:
          application/json:
            schema:
              description: the film_id of all film that you want to delete
              type: integer
              example:
                - 1
                - 2
                - 3
      responses:
        200:
          description: Success
          content:
            text/plain:
              schema:
                type: string
                example: "Returns a list of deleted films id"
        400:
          description: Error
          content: {}

  /films/{id}:
    ## get film by its id
    get:
      tags:
        - "Film"
      summary: get a film by its id
      operationId: getFilm
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Film"
        400:
          description: Error
          content: {}
    ## modify entirely a film
    put:
      tags:
        - "Film"
      summary: modify entirely a film except its id
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      requestBody:
        description: new film
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewFilm"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Film"
        400:
          description: Error
          content: {}
    ## film partial modification by id
    patch:
      tags:
        - "Film"
      description: |
        performs update on at most 4 of these per update
         * title
         * duration
         * summary
         * director
         * date
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
            examples:
              changeTitle:
                value:
                  Title: "new title"
              change_Title_And_Summary:
                value:
                  Title: "new title"
                  Summary: "new summary"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Film"
    ## delete one film by id
    delete:
      tags:
        - "Film"
      summary: deletes a film by giving its id
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        200:
          description: Success
          content:
            text/plain:
              schema:
                type: string
                example: "Returns the id of the deleted film"
        400:
          description: Error
          content: {}
  /categories:
    ## get all category
    get:
      tags:
        - "Category"
      summary: get category list
      operationId: getCategories
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Category"
    post:
      tags:
        - "Category"
      summary: add new category
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewCategory"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Category"
    patch:
      tags:
        - "Category"
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
            example: "fiction"
      description: adds film to one existant category
      requestBody:
        content:
          application/json:
            schema:
              description: the film_id of all film that you want to delete
              type: integer
              example:
                - 1
                - 2
                - 3

        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
    delete:
      tags:
        - "Category"
      summary: deletes a category by giving its name
      parameters:
        - name: name
          in: query
          schema:
            type: string
          required: true
      responses:
        200:
          description: Success
          content:
            text/plain:
              schema:
                type: string
                example: "Returns the name of the deleted category"
        400:
          description: Error
          content: {}
  /projections:
    get:
      tags:
        - "Projection"
      summary: Get all projections
      operationId: getProjections
      parameters:
        - name: "page_Size"
          in: query
          schema:
            type: integer
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Projection"
        400:
          description: Error
          content: {}
    post:
      tags:
        - "Projection"
      summary: creates a new Projection
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      requestBody:
        description: new film
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewProjection"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Projection"
        400:
          description: Error
          content: {}
    delete:
      tags:
        - "Projection"
      summary: deletes many Projections
      requestBody:
        description: List of projection_id you wish to delete
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  projection_id:
                    type: integer
                    example: 1
      responses:
        200:
          description: Success
          content:
            text/plain:
              schema:
                type: string
                example: "Returns a list of deleted projections id"
        400:
          description: Error
          content: {}

  /projections/{id}:
    get:
      tags:
        - "Projection"
      summary: get the projection by its id
      operationId: getProjection
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Projection"
        400:
          description: Error
          content: {}
    put:
      tags:
        - "Projection"
      summary: allows you to modify projection data except id
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      requestBody:
        description: new projection
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewProjection"
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Projection"
        400:
          description: Error
          content: {}
    patch:
      tags:
        - "Projection"
      summary: partial updates on Projection identified by id
      description: |
        Performs updates one or two of these
          * hour
          * film_id
          * room_id
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewProjection"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Projection"
        400:
          description: Error
          content: {}
    delete:
      tags:
        - "Projection"
      summary: deletes a projection by giving its id
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        200:
          description: Success
          content:
            text/plain:
              schema:
                type: string
                example: "Returns the id of the deleted projection"

        400:
          description: Error
          content: {}

components:
  schemas:
    Room:
      type: object
      properties:
        id:
          type: string
          enum:
            - A
            - B
        capacity:
          type: number
          example: 30

    NewFilm:
      type: object
      properties:
        title:
          type: string
          example: "The film"
        duration:
          type: string
          example: 01:20:32
        summary:
          type: string
          example: "this is the summary"
        director:
          type: string
          example: Jhon Doe
        date:
          type: string
          format: date
          example: 2020-05-05
    Film:
      type: object
      properties:
        id:
          type: number
      allOf:
        - $ref: "#/components/schemas/NewFilm"
    Category:
      type: object
      properties:
        id:
          type: integer
          example: 100
        name:
          type: string
          example: fiction
        filmList:
          type: array
          items:
            $ref: "#/components/schemas/Film"
    NewCategory:
      type: object
      properties:
        name:
          type: string
          example: fiction
        filmList:
          type: integer
          example:
            - 1
            - 2
            - 3

    Projection_on_Calendar:
      type: object
      properties:
        film:
          $ref: "#/components/schemas/Film"
        room:
          $ref: "#/components/schemas/Room"

    NewProjection:
      type: object
      allOf:
        - $ref: "#/components/schemas/Projection_on_Calendar"
      properties:
        hours:
          type: string
          format: date-time

    Projection:
      type: object
      allOf:
        - $ref: "#/components/schemas/NewProjection"
      properties:
        projection_id:
          type: number
          example: 1
    Projection_per_day:
      type: array
      items:
        type: object
        properties:
          projection_hours:
            type: string
            format: date-time
          projections:
            type: array
            items:
              $ref: "#/components/schemas/Projection_on_Calendar"
